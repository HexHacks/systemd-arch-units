Arch Linux-specific native unit files for SystemD. A PKGBUILD is available in
the AUR [1] which installs these units to /lib/systemd/system. After
installing, units can be activated by using the systemctl utility, e.g.

  systemctl enable rpcbind.service alsa.service ...

Note that service units understand the idea of dependencies. Enabling a unit
such as sshd.service will also pull in network.service.

As an example, here's my setup:

/etc/systemd/system
├── getty.target.wants
│   ├── getty@tty1.service -> /lib/systemd/system/getty@.service
│   ├── getty@tty2.service -> /lib/systemd/system/getty@.service
│   ├── getty@tty3.service -> /lib/systemd/system/getty@.service
│   ├── getty@tty4.service -> /lib/systemd/system/getty@.service
│   ├── getty@tty5.service -> /lib/systemd/system/getty@.service
│   ├── getty@tty6.service -> /lib/systemd/system/getty@.service
│   └── syslog-ng.service -> ../syslog-ng.service
├── graphical.target.wants
├── multi-user.target.wants
│   ├── alsa.service -> /lib/systemd/system/alsa.service
│   ├── crond.service -> /lib/systemd/system/crond.service
│   ├── dbus.service -> /lib/systemd/system/dbus.service
│   ├── getty.target -> /lib/systemd/system/getty.target
│   ├── mpd.service -> /lib/systemd/system/mpd.service
│   ├── network.service -> /lib/systemd/system/network.service
│   ├── nfs-common.service -> /lib/systemd/system/nfs-common.service
│   ├── remote-fs.target -> /lib/systemd/system/remote-fs.target
│   ├── rpcbind.service -> /lib/systemd/system/rpcbind.service
│   └── sshd.service -> /lib/systemd/system/sshd.service
├── sockets.target.wants
│   └── dbus.socket -> /lib/systemd/system/dbus.socket
├── ctrl-alt-del.target -> /lib/systemd/system/reboot.target
├── default.target -> /lib/systemd/system/graphical.target
└── kbrequest.target -> /lib/systemd/system/rescue.target

4 directories, 21 files

[1] http://aur.archlinux.org/packages.php?ID=40419
